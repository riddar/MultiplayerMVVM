//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MultiPlayer.UI.UserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserDataService")]
    public interface IUserDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/GetAllUsers", ReplyAction="http://tempuri.org/IUserDataService/GetAllUsersResponse")]
        MultiPlayer.BusinessObjects.Models.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/GetAllUsers", ReplyAction="http://tempuri.org/IUserDataService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/CreateUser", ReplyAction="http://tempuri.org/IUserDataService/CreateUserResponse")]
        MultiPlayer.BusinessObjects.Models.User CreateUser(MultiPlayer.BusinessObjects.Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/CreateUser", ReplyAction="http://tempuri.org/IUserDataService/CreateUserResponse")]
        System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User> CreateUserAsync(MultiPlayer.BusinessObjects.Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/DeleteUser", ReplyAction="http://tempuri.org/IUserDataService/DeleteUserResponse")]
        MultiPlayer.BusinessObjects.Models.User DeleteUser(MultiPlayer.BusinessObjects.Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/DeleteUser", ReplyAction="http://tempuri.org/IUserDataService/DeleteUserResponse")]
        System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User> DeleteUserAsync(MultiPlayer.BusinessObjects.Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/GetUserById", ReplyAction="http://tempuri.org/IUserDataService/GetUserByIdResponse")]
        MultiPlayer.BusinessObjects.Models.User GetUserById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/GetUserById", ReplyAction="http://tempuri.org/IUserDataService/GetUserByIdResponse")]
        System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User> GetUserByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/GetUserByName", ReplyAction="http://tempuri.org/IUserDataService/GetUserByNameResponse")]
        MultiPlayer.BusinessObjects.Models.User GetUserByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/GetUserByName", ReplyAction="http://tempuri.org/IUserDataService/GetUserByNameResponse")]
        System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User> GetUserByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/UpdateUser", ReplyAction="http://tempuri.org/IUserDataService/UpdateUserResponse")]
        MultiPlayer.BusinessObjects.Models.User UpdateUser(MultiPlayer.BusinessObjects.Models.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserDataService/UpdateUser", ReplyAction="http://tempuri.org/IUserDataService/UpdateUserResponse")]
        System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User> UpdateUserAsync(MultiPlayer.BusinessObjects.Models.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserDataServiceChannel : MultiPlayer.UI.UserService.IUserDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserDataServiceClient : System.ServiceModel.ClientBase<MultiPlayer.UI.UserService.IUserDataService>, MultiPlayer.UI.UserService.IUserDataService {
        
        public UserDataServiceClient() {
        }
        
        public UserDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MultiPlayer.BusinessObjects.Models.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public MultiPlayer.BusinessObjects.Models.User CreateUser(MultiPlayer.BusinessObjects.Models.User user) {
            return base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User> CreateUserAsync(MultiPlayer.BusinessObjects.Models.User user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public MultiPlayer.BusinessObjects.Models.User DeleteUser(MultiPlayer.BusinessObjects.Models.User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User> DeleteUserAsync(MultiPlayer.BusinessObjects.Models.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public MultiPlayer.BusinessObjects.Models.User GetUserById(System.Nullable<int> id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User> GetUserByIdAsync(System.Nullable<int> id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public MultiPlayer.BusinessObjects.Models.User GetUserByName(string name) {
            return base.Channel.GetUserByName(name);
        }
        
        public System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User> GetUserByNameAsync(string name) {
            return base.Channel.GetUserByNameAsync(name);
        }
        
        public MultiPlayer.BusinessObjects.Models.User UpdateUser(MultiPlayer.BusinessObjects.Models.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<MultiPlayer.BusinessObjects.Models.User> UpdateUserAsync(MultiPlayer.BusinessObjects.Models.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
    }
}
